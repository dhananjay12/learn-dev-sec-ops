name: Java CI with Maven

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: Setup JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Build with Maven
        run: mvn clean package

      - name: Sonar Cloud scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # Make sure the project Id is correct in pom.xml or you can pass as arguments here
        # Make sure automatic scanning of the project in snarcloud UI is disable. It can only do via pull or push
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        env:
          # actions/setup-java@v1 changes JAVA_HOME so it needs to be reset to match the depcheck image
          JAVA_HOME: /opt/jdk
        with:
          project: 'test'
          path: '.'
          format: 'HTML'
          #https://jeremylong.github.io/DependencyCheck/dependency-check-cli/arguments.html
          args: >
            --enableRetired
      - name: Upload Dependency Check Results
        uses: actions/upload-artifact@master
        with:
          name: Depcheck report
          # The action forces to put in --out /github/workspace/reports.
          path: ${{github.workspace}}/reports

      - name: Get version
        run: |
          DOCKER_TAG=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
          echo "::set-output name=DOCKER_TAG::$DOCKER_TAG"
        id: get_version

      - name: Build Images using JIB
        run: mvn -Dmaven.test.skip=true package jib:build -Djib.to.auth.username=${{ secrets.DOCKERHUB_USERNAME }} -Djib.to.auth.password=${{ secrets.DOCKERHUB_KEY }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: dhananjay12/devsecops-employee-service:${{ steps.get_version.outputs.DOCKER_TAG }}
          format: 'table'
          # Do not fail the build
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: OPA Conftest
        run: |
          docker run --rm -v $(pwd):/project openpolicyagent/conftest:v0.34.0 test --policy docker-security.rego Dockerfile
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.2</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>com.djcodes.dev.sec.ops</groupId>
  <artifactId>employee-service</artifactId>
  <version>0.2.0</version>
  <name>employee-service</name>
  <description>Demo project for Spring Boot</description>

  <properties>
    <java.version>17</java.version>
    <docker.image.url>registry.hub.docker.com/dhananjay12</docker.image.url>
    <docker.image.prefix>devsecops</docker.image.prefix>

    <!-- sonar properties -->
    <sonar.projectKey>dhananjay12_learn-dev-sec-ops</sonar.projectKey>
    <sonar.organization>dhananjay12</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mariadb.jdbc</groupId>
      <artifactId>mariadb-java-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.8</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--                   PITest Mutation Plugin                   -->
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>1.7.3</version> <!-- Java 17 fix https://github.com/hcoles/pitest/issues/964 -->
        <executions>
          <execution>
            <id>pit-report</id>
            <!-- optional, this example attached the goal into mvn test phase -->
            <phase>test</phase>
            <goals>
              <goal>mutationCoverage</goal>
            </goals>
          </execution>
        </executions>
        <!-- https://github.com/hcoles/pitest/issues/284 -->
        <!-- Need this to support JUnit 5 -->
        <dependencies>
          <dependency>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-junit5-plugin</artifactId>
            <version>0.15</version>
          </dependency>
        </dependencies>
        <configuration>
          <!--disable placing PIT reports in time-based subfolders-->
          <timestampedReports>false</timestampedReports>
          <!--mutation testing is a time consuming task, always declares the classes that are needed for the mutation test-->
          <targetClasses>
            <param>com.djcodes.devsecops.utils.*</param>
          </targetClasses>
          <targetTests>
            <param>com.djcodes.devsecops.utils.*</param>
          </targetTests>
          <mutationThreshold>70</mutationThreshold>
          <outputFormats>
            <outputFormat>XML</outputFormat>
            <outputFormat>HTML</outputFormat>
          </outputFormats>
          <!-- Add specific <mutators> here if you want to control what could be changed-->
        </configuration>
      </plugin>
      <!--  Dependency Check Plugin - Use "mvn dependency-check:check" to see reports, although it will try to download  all NVD CVE from 2002,
       which might take time.  Another option is to use  GitHub action which internally uses `owasp/dependency-check-action:latest` for
                  faster execution-->
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>7.1.1</version>
        <configuration>
          <format>ALL</format>
<!--          <failBuildOnCVSS>25</failBuildOnCVSS>-->
          <!-- fail the build for CVSS greater than or equal to 5 -->
          <!--
                      use internal mirroring of CVE contents
                      Suppress files
                      E.g. a company-wide suppression file and local project file
                     -->
          <!--
                     <cveUrlModified>http://internal-mirror.mycorp.com/nvdcve-1.1-modified.json.gz</cveUrlModified>
                                    <cveUrlBase>http://internal-mirror.mycorp.com/nvdcve-1.1-%d.json.gz</cveUrlBase>
                     <suppressionFiles>
                                        <suppressionFile>http://example.org/suppression.xml</suppressionFile>
                                        <suppressionFile>project-suppression.xml</suppressionFile>
                                    </suppressionFiles>
                                 -->
        </configuration>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>4.9.10</version>
        <executions>
          <execution>
            <id>get-the-git-infos</id>
            <phase>initialize</phase>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <generateGitPropertiesFile>false</generateGitPropertiesFile>
          <dateFormat>yyyy-MM-dd'T'HH:mm:ss'Z'</dateFormat>
          <dateFormatTimeZone>GMT</dateFormatTimeZone>
          <includeOnlyProperties>
            <includeOnlyProperty>^git.commit.time$</includeOnlyProperty>
          </includeOnlyProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>3.2.1</version>
        <configuration>
          <from>
            <image>openjdk:17.0.2-bullseye</image>
          </from>
          <to>
            <image>${docker.image.url}/${docker.image.prefix}-${project.artifactId}</image>
            <tags>
              <tag>${project.version}</tag>
            </tags>
          </to>
          <container>
            <creationTime>${git.commit.time}</creationTime>
            <filesModificationTime>${git.commit.time}</filesModificationTime>
            <mainClass>com.djcodes.devsecops.EmployeeServiceApplication</mainClass>
            <ports>
              <port>8080</port>
            </ports>
          </container>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
